@model Services.EntityModels.User

@{
    Layout = "_AdminLayout";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control required" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control required" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control required" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control required" } })
                @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.AddressOne, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressOne, new { htmlAttributes = new { @class = "form-control required" } })
                @Html.ValidationMessageFor(model => model.AddressOne, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
         
            <div class="col-md-2">
            </div>
            <div class="md-form mt-0 col-md-10">
                <div class="dropdown">

                    <select name="Role" id="Role">
                        <option value="Admin">Admin </option>
                        <option value="Manager">Manager</option>
                        <option value="Contributor">Contributor</option>

                    </select>
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Password">Password</label>
            <div class="col-md-10">

                <input type="Password" class="form-control required password password-box" name="Password" id="Password" placeholder="Password">
                <span class="passwordlength">Password length should be at least 6</span>
            </div>


        </div>

        <div class="form-group">


            <label class="control-label col-md-2" for="Password">Confirm Password</label>
            <div class="col-md-10">

                <input type="Password" class="form-control required password" name="ConfirmPassword" id="ConfirmPassword" placeholder="Confirm Password">
                <span class="passwordmatch">Password and confirm password does not match</span>
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save"  onclick="return CommonValidation();"  class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

