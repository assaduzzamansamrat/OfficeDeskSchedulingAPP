@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model Services.EntityModels.OperationModel

@{
    Layout = "_AdminLayout";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Team</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Team.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Team.TeamName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Team.TeamName, new { htmlAttributes = new { @class = "form-control required" } })
                @Html.ValidationMessageFor(model => model.Team.TeamName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Team.TeamSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Team.TeamSize, new { htmlAttributes = new { @class = "form-control required" } })
                @Html.ValidationMessageFor(model => model.Team.TeamSize, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="margin-left:13.5%;">
            <div class="col-sm-12">
                <div class="md-form mt-0">
                    <div class="dropdown" style="margin-left: 20px;">
                          <label for="Equipments" class="visually-hidden">Equipment Name </label>
                        <select name="Equipments" id="Equipments">
                            <option value="Desktop">Desktop</option>
                            <option value="Laptop">Laptop</option>
                            <option value="Printer">Printer</option>

                        </select>
                       
                                    <button type="button" calss="btn btn-primary" style="color: #fff; background-color: #337ab7;border-color: #2e6da4;display: inline-block;margin-bottom: 0;font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;
-ms-touch-action: manipulation;touch-action: manipulation;cursor: pointer;background-image: none;border: 1px solid transparent;
 padding: 6px 12px;font-size: 14px;line-height: 1.42857143;border-radius: 4px;-webkit-user-select: none;-moz-user-select: none;-ms-user-select: none;user-select: none;
" onclick="AddEquipment();"> Add Equipment</button>

 <button type="button" calss="btn btn-primary" style="color: #fff; background-color: #337ab7;border-color: #2e6da4;display: inline-block;margin-bottom: 0;font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;
-ms-touch-action: manipulation;touch-action: manipulation;cursor: pointer;background-image: none;border: 1px solid transparent;
 padding: 6px 12px;font-size: 14px;line-height: 1.42857143;border-radius: 4px;-webkit-user-select: none;-moz-user-select: none;-ms-user-select: none;user-select: none;
" onclick="ResetEquipment();"> Reset Equipment</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Team.EquipmentDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Team.EquipmentDetails, new { htmlAttributes = new { @class = "form-control required", @readonly="readonly" } })
                @Html.ValidationMessageFor(model => model.Team.EquipmentDetails, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2"></div>
            <div class="col-sm-10" style="margin-left: -19px;">
                <div class="md-form mt-0">
                    <div class="dropdown" style="margin-left: 20px;">
                        <label for="ManagerId" class="visually-hidden">Select Manager </label>
                        <select name="Team.ManagerId" id="Team.ManagerId">

                            @foreach (var item in Model.User)
                            {
                                if(Model.Team.ManagerId == @item.Id)
                                {
                                    <option  value='@item.Id' selected>@item.LastName</option>
                                }
                                else
                                {
                                    <option value='@item.Id'>@item.LastName</option>
                                }
                              
                            }

                        </select>
                    </div>
                </div>
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" onclick="return CommonValidation();"  value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Team")
</div>


<script type="text/javascript">
    var clickCounter =0;
    var finalText="";
    function AddEquipment()
    {
        var equipmentValues = $( "#Equipments option:selected" ).text();

       
        if(clickCounter==0){
            finalText = finalText+equipmentValues;
        }
        else{
             finalText = finalText+ "," + equipmentValues;
        }
        $("#Team_EquipmentDetails").val("");
        $("#Team_EquipmentDetails").val(finalText);
        clickCounter = clickCounter + 1;
    }
     function ResetEquipment(){
         $("#Team_EquipmentDetails").val("");
         finalText ="";
           clickCounter =0;
    }
</script>